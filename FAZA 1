#include <iostream>
using namespace std;

class Avion {
public:
    const int id;
    string nume;
    int nrMotoare;
    int* varsteMotoare;
    static int dimensiunilearipilor;

    Avion() : id(100) {
        this->nume = "Avion";
        this->nrMotoare = 0;
        this->varsteMotoare = NULL;
    }

    Avion(int idNou, string nume) : id(idNou) {
        this->nume = nume;
        this->nrMotoare = 0;
        this->varsteMotoare = NULL;
    }

    Avion(int id, string nume, int nrMotoare, int* varsteMotoare) : id(id), nume(nume), nrMotoare(nrMotoare) {
        if (nrMotoare != 0) {
            this->varsteMotoare = new int[nrMotoare];
            for (int i = 0; i < nrMotoare; i++) {
                this->varsteMotoare[i] = varsteMotoare[i];
            }
        }
        else this->varsteMotoare = NULL;
    }

    ~Avion() {
        if (this->varsteMotoare != NULL) {
            delete[] this->varsteMotoare;
        }
    }

    void afisare() {
        cout << id << "." << "nume: " << nume << "." << Avion::dimensiunilearipilor << "nr motoare" << nrMotoare << "varste: ";
        if (varsteMotoare != NULL) {
            for (int i = 0; i < nrMotoare; i++) {
                cout << varsteMotoare[i] << ",";
            }
        }
        else {
            cout << "-";
        }
        cout << endl;
    }
};
int Avion::dimensiunilearipilor = 2;

class Tren {
public:
    const int id;
    string nume;
    int nrVagoane;
    int* varsteVagoane;
    static int viteza;

    Tren() : id(100) {
        this->nume = "Tren";
        this->nrVagoane = 0;
        this->varsteVagoane = NULL;
    }

    Tren(int idNou, string nume) : id(idNou) {
        this->nume = nume;
        this->nrVagoane = 0;
        this->varsteVagoane = NULL;
    }

    Tren(int id, string nume, int nrVagoane, int* varsteVagoane) : id(id), nume(nume), nrVagoane(nrVagoane) {
        if (nrVagoane != 0) {
            this->varsteVagoane = new int[nrVagoane];
            for (int i = 0; i < nrVagoane; i++) {
                this->varsteVagoane[i] = varsteVagoane[i];
            }
        }
        else this->varsteVagoane = NULL;
    }

    ~Tren() {
        if (this->varsteVagoane != NULL) {
            delete[] this->varsteVagoane;
        }
    }

    void afisare() {
        cout << id << "." << "nume: " << nume << "." << Tren::viteza << "nr vagoane" << nrVagoane << "varste: ";
        if (varsteVagoane != NULL) {
            for (int i = 0; i < nrVagoane; i++) {
                cout << varsteVagoane[i] << ",";
            }
        }
        else {
            cout << "-";
        }
        cout << endl;
    }
};
int Tren::viteza = 2;

class Rulota {
public:
    const int id;
    string nume;
    int nrRoti;
    int* dimensiuniRoti;
    static int gradPoluare;

    Rulota() : id(100) {
        this->nume = "Rulota";
        this->nrRoti = 0;
        this->dimensiuniRoti = NULL;
    }

    Rulota(int idNou, string nume) : id(idNou) {
        this->nume = nume;
        this->nrRoti = 0;
        this->dimensiuniRoti = NULL;
    }

    Rulota(int id, string nume, int nrRoti, int* dimensiuniRoti) : id(id), nume(nume), nrRoti(nrRoti) {
        if (nrRoti != 0) {
            this->dimensiuniRoti = new int[nrRoti];
            for (int i = 0; i < nrRoti; i++) {
                this->dimensiuniRoti[i] = dimensiuniRoti[i];
            }
        }
        else this->dimensiuniRoti = NULL;
    }

    ~Rulota() {
        if (this->dimensiuniRoti != NULL) {
            delete[] this->dimensiuniRoti;
        }
    }

    void afisare() {
        cout << id << "." << "nume: " << nume << "." << Rulota::gradPoluare << "nr Roti" << nrRoti << "varste: ";
        if (dimensiuniRoti != NULL) {
            for (int i = 0; i < nrRoti; i++) {
                cout << dimensiuniRoti[i] << ",";
            }
        }
        else {
            cout << "-";
        }
        cout << endl;
    }
};
int Rulota::gradPoluare = 2;

int main() {
    int* varste;
    varste = new int[2];
    varste[0] = 5;
    varste[1] = 10;
    Avion avion1;
    avion1.afisare();
    Avion avion2(101, "Avion2", 2, varste);
    avion2.afisare();

    Avion avion3(7, "Tarom");
    avion3.afisare();

    Tren tren1;
    tren1.afisare();
    Tren tren2(101, "Tren2", 2, varste);
    tren2.afisare();

    Tren tren3(7, "cfr");
    tren3.afisare();

    Rulota rulota1;
    rulota1.afisare();
    Rulota rulota2(101, "Rulota2", 2, varste);
    rulota2.afisare();

    Rulota rulota3(7, "Bucuresti");
    rulota3.afisare();

    delete[] varste; 
    return 0;
}
